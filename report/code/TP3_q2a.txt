long OS::ChanIn (int idxChannel, char *buf, int &bufSize)
{
    Channel& myChannel= m_channels[idxChannel];

    if(myChannel.isSet())
    {
        //Check buffer sizes
        unsigned int size=bufSize;
        if(bufSize > myChannel.getBufferSize())
        {
            cerr<<" Could not transfer all data because ChanOut buffer size is too large!"<<endl;
            size=myChannel.getBufferSize();
        }

        //I arrived second at the rendez-vous, do the transfer
        memcpy(buf, myChannel.getBuffer(), size);

        //Reset the channel for future usage
        myChannel.reset();

        myChannel.m_event.notify();

    }
    else
    {
        //I arrived first at the rendez-vous, set the channel
        myChannel.set(buf, bufSize);

        sc_event_or_list blockingEvent(myChannel.m_event);
        TaskBlock(blockingEvent);
    }

    return 0;
}